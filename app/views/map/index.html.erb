<!DOCTYPE html>
<html>
<head>
  <title>Gym Locator Map</title>

  <!-- Google Maps APIを非同期で読み込む -->
  <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCbID17VFI3V33bzscWBnkP0D_DBQ7I7Js&map_ids=989747c457317a4d&callback=initMap"></script>
  <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
  <%= stylesheet_link_tag 'styles', media: 'all', 'data-turbolinks-track': 'reload' %>
</head>
<body>
  <h1 class="text-center">ジムの場所</h1>
   <div id="sidebar">
  <div class="form-group">
    <div id="equipment-button" class="custom-button">
      <span class="custom-label">器具</span>
      <span class="custom-text">選択する</span>
      <span class="custom-plus">+</span>
    </div>
  </div>
  <div class="form-group">
    <div id="prefecture-button" class="custom-button">
      <span class="custom-label">都道府県</span>
      <span class="custom-text">選択する</span>
      <span class="custom-plus">+</span>
    </div>
  </div>
  <div id="selected-equipments" class="form-group text-left">
    <% if params[:equipments].present? %>
      <% Array(params[:equipments]).each do |equipment| %>
        <div class="selected-equipment badge badge-pill badge-secondary">
          <%= equipment %>
          <span class="remove-equipment" onclick="this.parentElement.remove()"> ×</span>
        </div>
      <% end %>
    <% end %>
  </div>
  <%= form_with url: map_path, method: :get, local: true do |form| %>
    <input type="hidden" name="equipments" id="selected-equipments-input" value="<%= params[:equipments].is_a?(Array) ? params[:equipments].join(',') : params[:equipments] %>">
    <input type="hidden" name="prefectures" id="selected-prefectures-input" value="<%= params[:prefectures].is_a?(Array) ? params[:prefectures].join(',') : params[:prefectures] %>">
    <%= form.submit '検索', class: 'btn btn-primary' %>
  <% end %>
  <h2>ジムリスト</h2>
  <ul id="gym-list" class="list-group"></ul>
  <div id="no-gyms-message" class="no-gyms-message" style="display: none;">対象のジムがありません</div>
</div>

    <div id="map"></div>

  <!-- 器具選択モーダル -->
  <div class="modal fade" id="equipmentModal" tabindex="-1" role="dialog" aria-labelledby="equipmentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="equipmentModalLabel">器具を選択</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form id="equipment-form">
            <div id="equipmentList">
              <% @equipments.each do |equipment| %>
                <div class="form-check">
                  <input class="form-check-input equipment-checkbox" type="checkbox" name="equipments[]" value="<%= equipment %>" id="equipment_<%= equipment %>">
                  <label class="form-check-label" for="equipment_<%= equipment %>">
                    <%= equipment %>
                  </label>
                </div>
              <% end %>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">閉じる</button>
          <button type="button" class="btn btn-primary" id="apply-equipment-selection">適用</button>
        </div>
      </div>
    </div>
  </div>

    <!-- 都道府県選択モーダル -->
  <div class="modal fade" id="prefectureModal" tabindex="-1" role="dialog" aria-labelledby="prefectureModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="prefectureModalLabel">都道府県を選択</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form id="selection-form" action="/map" method="get">
            <input type="hidden" id="selected-equipments" name="equipments" value="">
            <div id="prefectureList">
              <% @regions.each do |region, prefectures| %>
                <div class="region-name"><%= region %></div>
                <% prefectures.each do |prefecture| %>
                  <div class="form-check prefecture-item">
                    <input class="form-check-input prefecture-checkbox" type="checkbox" name="prefectures[]" value="<%= prefecture %>" id="prefecture_<%= prefecture %>">
                    <label class="form-check-label" for="prefecture_<%= prefecture %>">
                      <%= prefecture %>
                    </label>
                  </div>
                <% end %>
              <% end %>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">閉じる</button>
          <button type="button" class="btn btn-primary" id="apply-prefecture-selection">適用</button>
        </div>
      </div>
    </div>
  </div>

      <script>
    function initMap() {
      var gyms = <%= raw @gyms.to_json %>;

      // ジムがある場合は最初のジムの位置を中心に設定
      var initialLatLng;
      if (gyms.length > 0) {
        initialLatLng = { lat: gyms[0].latitude, lng: gyms[0].longitude };
      } else {
        initialLatLng = { lat: 35.6895, lng: 139.6917 }; // デフォルトは東京
      }

      var map = new google.maps.Map(document.getElementById('map'), {
        zoom: 12,
        center: initialLatLng,
        mapId: '989747c457317a4d'  // ここにマップIDを指定
      });

      var infowindow = new google.maps.InfoWindow();

      if (gyms.length === 0) {
        document.getElementById('no-gyms-message').style.display = 'block';
        return;
      }

      gyms.forEach(function(gym) {
        var marker = new google.maps.Marker({
          position: { lat: gym.latitude, lng: gym.longitude },
          map: map,
          title: gym.gym_name,
          icon: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'
        });

        marker.addListener('mouseover', function() {
          infowindow.setContent('<div><strong>' + gym.gym_name + '</strong><br>' + gym.address + '</div>');
          infowindow.open(map, marker);
        });

        marker.addListener('mouseout', function() {
          infowindow.close();
        });

        var listItem = document.createElement('li');
        listItem.className = 'list-group-item text-left'; // 左寄せのクラスを追加
        
        // ジム名と住所を別々のdivにして、2段に分ける
        var gymNameDiv = document.createElement('div');
        gymNameDiv.className = 'gym-name';
        gymNameDiv.textContent = gym.gym_name;

        var gymAddressDiv = document.createElement('div');
        gymAddressDiv.className = 'gym-address';
        gymAddressDiv.textContent = gym.address;

        listItem.appendChild(gymNameDiv);
        listItem.appendChild(gymAddressDiv);

        listItem.addEventListener('click', function() {
          map.setCenter(marker.getPosition());
          infowindow.setContent('<div><strong>' + gym.gym_name + '</strong><br>' + gym.address + '</div>');
          infowindow.open(map, marker);
        });

        document.getElementById('gym-list').appendChild(listItem);
      });
    }

    document.addEventListener("DOMContentLoaded", function() {
      document.getElementById('apply-equipment-selection').addEventListener('click', function() {
        var selectedEquipments = [];
        document.querySelectorAll('.equipment-checkbox:checked').forEach(function(checkbox) {
          selectedEquipments.push(checkbox.value);
        });
        document.getElementById('selected-equipments-input').value = selectedEquipments.join(',');
        document.getElementById('selected-equipments').innerHTML = selectedEquipments.map(function(equipment) {
          return `<div class="selected-equipment">
                    ${equipment}
                    <span class="remove-equipment" onclick="this.parentElement.remove()"> ×</span>
                  </div>`;
        }).join('');
        $('#equipmentModal').modal('hide');
      });

      document.getElementById('apply-prefecture-selection').addEventListener('click', function() {
        var selectedPrefectures = [];
        document.querySelectorAll('.prefecture-checkbox:checked').forEach(function(checkbox) {
          selectedPrefectures.push(checkbox.value);
        });
        document.getElementById('selected-prefectures-input').value = selectedPrefectures.join(',');
        $('#prefectureModal').modal('hide');
      });
    });

      document.addEventListener("DOMContentLoaded", function() {
  var equipmentButton = document.getElementById('equipment-button');
  var prefectureButton = document.getElementById('prefecture-button');

  // ボタンスタイルを適用する関数
  function applyButtonStyle(element) {
    element.style.display = 'flex';
    element.style.alignItems = 'center';
    element.style.border = '1px solid #ddd';
    element.style.borderRadius = '5px';
    element.style.padding = '10px';
    element.style.backgroundColor = '#fff';
    element.style.marginBottom = '10px';
    element.style.cursor = 'pointer';
  }

  // 個々の要素にスタイルを適用する関数
  function applyElementStyle(element, styles) {
    for (var property in styles) {
      element.style[property] = styles[property];
    }
  }

  // 各要素にスタイルを適用
  applyButtonStyle(equipmentButton);
  applyButtonStyle(prefectureButton);

  applyElementStyle(equipmentButton.querySelector('.custom-label'), { fontWeight: 'bold', color: '#000', marginRight: '10px' });
  applyElementStyle(equipmentButton.querySelector('.custom-text'), { color: '#007bff', flexGrow: '1' });
  applyElementStyle(equipmentButton.querySelector('.custom-plus'), { borderRadius: '50%', width: '24px', height: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: 'transparent', color: '#007bff', fontSize: '16px', marginLeft: '10px' });

  applyElementStyle(prefectureButton.querySelector('.custom-label'), { fontWeight: 'bold', color: '#000', marginRight: '10px' });
  applyElementStyle(prefectureButton.querySelector('.custom-text'), { color: '#007bff', flexGrow: '1' });
  applyElementStyle(prefectureButton.querySelector('.custom-plus'), { borderRadius: '50%', width: '24px', height: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center', backgroundColor: 'transparent', color: '#007bff', fontSize: '16px', marginLeft: '10px' });

  // クリックイベントを設定
  equipmentButton.addEventListener('click', function() {
    $('#equipmentModal').modal('show');
  });

  prefectureButton.addEventListener('click', function() {
    $('#prefectureModal').modal('show');
  });
});

  </script>
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

</body>
</html>