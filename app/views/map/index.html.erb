<!DOCTYPE html>
<html>
<head>
  <title>Gym Locator Map</title>
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>

  <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
  <%= stylesheet_link_tag 'styles', media: 'all', 'data-turbolinks-track': 'reload' %>
  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">

  <!-- Google Maps APIを非同期で読み込む -->
  <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA2ghhF-QX1JbH36JdhWghvjMXRhigddZA&map_ids=989747c457317a4d&callback=initMap"></script>
</head>
<body>
  <!-- ヘッダー -->
  <nav class="navbar navbar-expand-lg navbar-light bg-custom">
    <%= link_to 'Gym Locator', root_path, class: 'navbar-brand' %> <!-- タイトルをクリックでトップページに遷移 -->
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav">
      </ul>
    </div>
  </nav>

  <h1 class="text-center">ジムの場所</h1>
  
  <div id="sidebar">
    <%= form_with url: map_path, method: :get, local: true do |form| %>
      <div class="form-group-inline">
        <div class="form-group">
          <%= form.label :equipments, '器具:' %>
          <%= form.select :equipments, options_for_select(@available_equipments, params[:equipments]), {}, { class: 'form-control' } %>
        </div>
        <div class="form-group">
          <%= form.label :prefectures, '都道府県:' %>
          <%= form.select :prefectures, options_for_select(@regions.values.flatten, params[:prefectures]), {}, { class: 'form-control' } %>
        </div>
      </div>
      <%= form.submit '検索', class: 'btn btn-primary' %>
    <% end %>
    <h2>ジムリスト</h2>
    <ul id="gym-list" class="list-group"></ul>
    <div id="no-gyms-message" class="no-gyms-message" style="display: none;">対象のジムがありません</div>
  </div>
  
  <div id="map"></div>

  <!-- フッター -->
  <footer class="bg-custom text-center text-white py-3">
    <p>© 2023 Gym Locator</p>
  </footer>

  <script>
    function initMap() {
      var gyms = <%= raw @gyms.to_json %>;

      // ジムがある場合は最初のジムの位置を中心に設定
      var initialLatLng;
      if (gyms.length > 0) {
        initialLatLng = { lat: gyms[0].latitude, lng: gyms[0].longitude };
      } else {
        initialLatLng = { lat: 35.6895, lng: 139.6917 }; // デフォルトは東京
      }

      var map = new google.maps.Map(document.getElementById('map'), {
        zoom: 12,
        center: initialLatLng,
        mapId: '989747c457317a4d'  // ここにマップIDを指定
      });

      var infowindow = new google.maps.InfoWindow();

      if (gyms.length === 0) {
        document.getElementById('no-gyms-message').style.display = 'block';
        return;
      }

      gyms.forEach(function(gym) {
        var marker = new google.maps.Marker({
          position: { lat: gym.latitude, lng: gym.longitude },
          map: map,
          title: gym.gym_name,
          icon: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'
        });

        marker.addListener('mouseover', function() {
          infowindow.setContent('<div><strong>' + gym.gym_name + '</strong><br>' + gym.address + '</div>');
          infowindow.open(map, marker);
        });

        marker.addListener('mouseout', function() {
          infowindow.close();
        });

        var listItem = document.createElement('li');
        listItem.className = 'list-group-item';
        
        // ジム名と住所を別々のdivにして、2段に分けたい
        var gymNameDiv = document.createElement('div');
        gymNameDiv.className = 'gym-name';
        gymNameDiv.textContent = gym.gym_name;

        var gymAddressDiv = document.createElement('div');
        gymAddressDiv.className = 'gym-address';
        gymAddressDiv.textContent = gym.address;

        listItem.appendChild(gymNameDiv);
        listItem.appendChild(gymAddressDiv);

        listItem.addEventListener('click', function() {
          map.setCenter(marker.getPosition());
          infowindow.setContent('<div><strong>' + gym.gym_name + '</strong><br>' + gym.address + '</div>');
          infowindow.open(map, marker);
        });

        document.getElementById('gym-list').appendChild(listItem);
      });
    }

    document.querySelector('form').addEventListener('submit', function(event) {
      var equipmentSelect = document.getElementById('equipment-select');
      var selectedOptions = Array.from(equipmentSelect.selectedOptions).map(option => option.value);
      
      // 選択された値を配列としてhidden inputに追加
      selectedOptions.forEach(function(value) {
        var hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = 'equipments[]';
        hiddenInput.value = value;
        this.appendChild(hiddenInput);
      }, this);
    });
  </script>

  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>